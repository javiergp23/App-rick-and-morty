{"version":3,"sources":["components/Search/Search.module.scss","components/Search/Search.js","components/Card/CardDetails.js","components/Card/Card.js","components/Pagination/Pagination.js","components/Filter/FilterBTN.js","components/Filter/category/Gender.js","components/Filter/category/Species.js","components/Filter/category/Status.js","components/Filter/Filter.js","components/Navbar/Navbar.js","components/Filter/category/InputGroup.js","Pages/Episodes.js","Pages/Location.js","App.js","reportWebVitals.js","index.js","components/Card/Card.module.scss"],"names":["module","exports","Search","setSearch","updatePageNumber","className","styles","search","onChange","e","target","value","placeholder","input","type","onClick","preventDefault","btn","CardDetails","id","useParams","useState","fetchedData","updateFetchedData","name","location","origin","gender","image","status","species","api","useEffect","a","fetch","then","res","json","data","src","alt","Card","display","page","results","map","x","style","textDecoration","to","card","img","content","badge","Pagination","pageNumber","info","window","innerWidth","width","setWidth","updateDimensions","addEventListener","removeEventListener","jsx","nextLabel","forcePage","previousLabel","previousClassName","nextClassName","activeClassName","marginPagesDisplayed","pageRangeDisplayed","pageCount","pages","onPageChange","selected","pageClassName","pageLinkClassName","FilterBTN","task","index","for","Gender","updateGender","items","Species","updateSpecies","item","Status","updateStatus","Filter","cursor","reload","Navbar","class","InputGroup","changeID","total","Array","keys","Episodes","React","setResults","setInfo","air_date","episode","setID","Promise","all","characters","Location","dimension","number","setNumber","residents","Home","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0008001.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Search_input__35TCK\",\"btn\":\"Search_btn__FmPPE\"};","import React from \"react\";\r\nimport styles from \"./Search.module.scss\";\r\n\r\nconst Search = ({ setSearch, updatePageNumber }) => {\r\n  let searchBtn = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <form\r\n      className={`${styles.search} d-flex flex-sm-row flex-column align-items-center justify-content-center gap-4 mb-5`}\r\n    >\r\n      <input\r\n        onChange={(e) => {\r\n          updatePageNumber(1);\r\n          setSearch(e.target.value);\r\n        }}\r\n        placeholder=\"Search for characters\"\r\n        className={styles.input}\r\n        type=\"text\"\r\n      />\r\n      <button\r\n        onClick={searchBtn}\r\n        className={`${styles.btn} btn btn-danger fs-5`}\r\n      >\r\n        Search\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst CardDetails = () => {\r\n  let { id } = useParams();\r\n\r\n  let [fetchedData, updateFetchedData] = useState([]);\r\n  let { name, location, origin, gender, image, status, species } = fetchedData;\r\n\r\n  let api = `https://rickandmortyapi.com/api/character/${id}`;\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      let data = await fetch(api).then((res) => res.json());\r\n      updateFetchedData(data);\r\n    })();\r\n  }, [api]);\r\n\r\n  return (\r\n    <div className=\"container d-flex justify-content-center mb-5\">\r\n      <div className=\"d-flex flex-column gap-3\">\r\n        <h1 className=\"text-center\">{name}</h1>\r\n\r\n        <img className=\"img-fluid\" src={image} alt=\"\" />\r\n        {(() => {\r\n          if (status === \"Dead\") {\r\n            return <div className=\"badge bg-danger fs-5\">{status}</div>;\r\n          } else if (status === \"Alive\") {\r\n            return <div className=\" badge bg-success fs-5\">{status}</div>;\r\n          } else {\r\n            return <div className=\"badge bg-secondary fs-5\">{status}</div>;\r\n          }\r\n        })()}\r\n        <div className=\"content\">\r\n          <div className=\"\">\r\n            <span className=\"fw-bold\">Gender : </span>\r\n            {gender}\r\n          </div>\r\n          <div className=\"\">\r\n            <span className=\"fw-bold\">Location: </span>\r\n            {location?.name}\r\n          </div>\r\n          <div className=\"\">\r\n            <span className=\"fw-bold\">Origin: </span>\r\n            {origin?.name}\r\n          </div>\r\n          <div className=\"\">\r\n            <span className=\"fw-bold\">Species: </span>\r\n            {species}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardDetails;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Card.module.scss\";\r\nimport CardDetails from \"./CardDetails\";\r\n\r\nconst Card = ({ page, results }) => {\r\n  let display;\r\n\r\n  if (results) {\r\n    display = results.map((x) => {\r\n      let { id, image, name, status, location } = x;\r\n\r\n      return (\r\n        <Link\r\n          style={{ textDecoration: \"none\" }}\r\n          to={`${page}${id}`}\r\n          key={id}\r\n          className=\"col-lg-3 col-md-6 col-sm-6 col-12 mb-4 position-relative text-dark\"\r\n        >\r\n          <div\r\n            className={`${styles.card} d-flex flex-column justify-content-center`}\r\n          >\r\n            <img className={`${styles.img} img-fluid`} src={image} alt=\"\" />\r\n            <div className={`${styles.content}`}>\r\n              <div className=\"fs-5 fw-bold mb-4\">{name}</div>\r\n              <div className=\"\">\r\n                <div className=\"fs-6 fw-normal\">Last Location</div>\r\n                <div className=\"fs-5\">{location.name}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {(() => {\r\n            if (status === \"Dead\") {\r\n              return (\r\n                <div\r\n                  className={`${styles.badge} position-absolute badge bg-danger`}\r\n                >\r\n                  {status}\r\n                </div>\r\n              );\r\n            } else if (status === \"Alive\") {\r\n              return (\r\n                <div\r\n                  className={`${styles.badge} position-absolute badge bg-success`}\r\n                >\r\n                  {status}\r\n                </div>\r\n              );\r\n            } else {\r\n              return (\r\n                <div\r\n                  className={`${styles.badge} position-absolute badge bg-secondary`}\r\n                >\r\n                  {status}\r\n                </div>\r\n              );\r\n            }\r\n          })()}\r\n        </Link>\r\n      );\r\n    });\r\n  } else {\r\n    display = \"No Characters Found :/\";\r\n  }\r\n\r\n  return <>{display}</>;\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst Pagination = ({ pageNumber, info, updatePageNumber }) => {\r\n  let pageChange = (data) => {\r\n    updatePageNumber(data.selected + 1);\r\n  };\r\n\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const updateDimensions = () => {\r\n    setWidth(window.innerWidth);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    return () => window.removeEventListener(\"resize\", updateDimensions);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <style jsx>\r\n        {`\r\n          @media (max-width: 768px) {\r\n            .pagination {\r\n              font-size: 12px;\r\n            }\r\n            .next,\r\n            .prev {\r\n              display: none;\r\n            }\r\n          }\r\n          @media (max-width: 768px) {\r\n            .pagination {\r\n              font-size: 14px;\r\n            }\r\n          }\r\n        `}\r\n      </style>\r\n      <ReactPaginate\r\n        className=\"pagination justify-content-center my-4 gap-4\"\r\n        nextLabel=\"Next\"\r\n        forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\r\n        previousLabel=\"Prev\"\r\n        previousClassName=\"btn btn-danger fs-5 prev\"\r\n        nextClassName=\"btn btn-danger fs-5 next\"\r\n        activeClassName=\"active\"\r\n        marginPagesDisplayed={width < 576 ? 1 : 2}\r\n        pageRangeDisplayed={width < 576 ? 1 : 2}\r\n        pageCount={info?.pages}\r\n        onPageChange={pageChange}\r\n        pageClassName=\"page-item\"\r\n        pageLinkClassName=\"page-link bg-dark text-light\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst FilterBTN = ({ input, task, updatePageNumber, index, name }) => {\r\n  return (\r\n    <div>\r\n      <style jsx>\r\n        {`\r\n          .x:checked + label {\r\n            background-color: #0b5ed7;\r\n            color: white;\r\n          }\r\n          input[type=\"radio\"] {\r\n            display: none;\r\n          }\r\n        `}\r\n      </style>\r\n\r\n      <div className=\"form-check\">\r\n        <input\r\n          className=\"form-check-input x\"\r\n          type=\"radio\"\r\n          name={name}\r\n          id={`${name}-${index}`}\r\n        />\r\n        <label\r\n          onClick={(x) => {\r\n            task(input);\r\n            updatePageNumber(1);\r\n          }}\r\n          className=\"btn btn-outline-danger\"\r\n          for={`${name}-${index}`}\r\n        >\r\n          {input}\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterBTN;\r\n","import React from \"react\";\r\nimport FilterBTN from \"../FilterBTN\";\r\n\r\nconst Gender = ({ updateGender, updatePageNumber }) => {\r\n  let genders = [\"female\", \"male\", \"genderless\", \"unknown\"];\r\n  return (\r\n    <div className=\"accordion-item bg-dark\">\r\n      <h2 className=\"accordion-header\" id=\"headingThree\">\r\n        <button\r\n          className=\"accordion-button collapsed\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#collapseThree\"\r\n          aria-expanded=\"false\"\r\n          aria-controls=\"collapseThree\"\r\n        >\r\n          Gender\r\n        </button>\r\n      </h2>\r\n      <div\r\n        id=\"collapseThree\"\r\n        className=\"accordion-collapse collapse bg-dark\"\r\n        aria-labelledby=\"headingThree\"\r\n        data-bs-parent=\"#accordionExample\"\r\n      >\r\n        <div className=\"accordion-body d-flex flex-wrap gap-3\">\r\n          {genders.map((items, index) => {\r\n            return (\r\n              <FilterBTN\r\n                name=\"gender\"\r\n                index={index}\r\n                key={index}\r\n                updatePageNumber={updatePageNumber}\r\n                task={updateGender}\r\n                input={items}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gender;\r\n","import React from \"react\";\r\nimport FilterBTN from \"../FilterBTN\";\r\n\r\nconst Species = ({ updateSpecies, updatePageNumber }) => {\r\n  let species = [\r\n    \"Human\",\r\n    \"Alien\",\r\n    \"Humanoid\",\r\n    \"Poopybutthole\",\r\n    \"Mythological\",\r\n    \"Unknown\",\r\n    \"Animal\",\r\n    \"Disease\",\r\n    \"Robot\",\r\n    \"Cronenberg\",\r\n    \"Planet\",\r\n  ];\r\n  return (\r\n    <div className=\"accordion-item bg-dark\">\r\n      <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n        <button\r\n          className=\"accordion-button collapsed\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#collapseTwo\"\r\n          aria-expanded=\"false\"\r\n          aria-controls=\"collapseTwo\"\r\n        >\r\n          Species\r\n        </button>\r\n      </h2>\r\n      <div\r\n        id=\"collapseTwo\"\r\n        className=\"accordion-collapse collapse\"\r\n        aria-labelledby=\"headingTwo\"\r\n        data-bs-parent=\"#accordionExample\"\r\n      >\r\n        <div className=\"accordion-body d-flex flex-wrap gap-3\">\r\n          {species.map((item, index) => {\r\n            return (\r\n              <FilterBTN\r\n                name=\"species\"\r\n                index={index}\r\n                key={index}\r\n                updatePageNumber={updatePageNumber}\r\n                task={updateSpecies}\r\n                input={item}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Species;\r\n","import React from \"react\";\r\nimport FilterBTN from \"../FilterBTN\";\r\n\r\nconst Status = ({ updateStatus, updatePageNumber }) => {\r\n  let status = [\"Alive\", \"Dead\", \"Unknown\"];\r\n  return (\r\n    <div className=\"accordion-item bg-dark\">\r\n      <h2 className=\"accordion-header\" id=\"headingOne\">\r\n        <button\r\n          className=\"accordion-button\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#collapseOne\"\r\n          aria-expanded=\"true\"\r\n          aria-controls=\"collapseOne\"\r\n        >\r\n          Status\r\n        </button>\r\n      </h2>\r\n      <div\r\n        id=\"collapseOne\"\r\n        className=\"accordion-collapse collapse show\"\r\n        aria-labelledby=\"headingOne\"\r\n        data-bs-parent=\"#accordionExample\"\r\n      >\r\n        <div className=\"accordion-body d-flex flex-wrap gap-3\">\r\n          {status.map((item, index) => (\r\n            <FilterBTN\r\n              key={index}\r\n              index={index}\r\n              name=\"status\"\r\n              task={updateStatus}\r\n              updatePageNumber={updatePageNumber}\r\n              input={item}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","import React from \"react\";\r\nimport Gender from \"./category/Gender\";\r\nimport Species from \"./category/Species\";\r\nimport Status from \"./category/Status\";\r\n\r\nconst Filter = ({\r\n  pageNumber,\r\n  updatePageNumber,\r\n  updateStatus,\r\n  updateGender,\r\n  updateSpecies,\r\n}) => {\r\n  let clear = () => {\r\n    updateStatus(\"\");\r\n    updateGender(\"\");\r\n    updateSpecies(\"\");\r\n    updatePageNumber(1);\r\n    window.location.reload(false);\r\n  };\r\n  return (\r\n    <div className=\"col-lg-3 col-12 mb-5\">\r\n      <div className=\"text-center fw-bold fs-4 mb-2\">Filters</div>\r\n      <div\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={clear}\r\n        className=\"text-primary text-decoration-underline text-center mb-3\"\r\n      >\r\n        Clear Filters\r\n      </div>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <Status\r\n          updatePageNumber={updatePageNumber}\r\n          updateStatus={updateStatus}\r\n        />\r\n        <Species\r\n          updatePageNumber={updatePageNumber}\r\n          updateSpecies={updateSpecies}\r\n        />\r\n        <Gender\r\n          updatePageNumber={updatePageNumber}\r\n          updateGender={updateGender}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport \"../../App.scss\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-dark mb-4\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand fs-3 ubuntu text-light\">\r\n          Rick & Morty <span className=\"text-danger\">App</span>\r\n        </Link>\r\n        <style jsx>{`\r\n          button[aria-expanded=\"false\"] > .close {\r\n            display: none;\r\n          }\r\n          button[aria-expanded=\"true\"] > .open {\r\n            display: none;\r\n          }\r\n        `}</style>\r\n        <button\r\n          className=\"navbar-toggler border-0\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNavAltMarkup\"\r\n          aria-controls=\"navbarNavAltMarkup\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span class=\"fas fa-bars open text-dark\"></span>\r\n          <span class=\"fas fa-times close text-dark\"></span>\r\n        </button>\r\n        <div\r\n          className=\"collapse navbar-collapse justify-content-end\"\r\n          id=\"navbarNavAltMarkup\"\r\n        >\r\n          <div className=\"navbar-nav fs-5\">\r\n            <NavLink to=\"/\" className=\"nav-link text-light\">\r\n              Characters\r\n            </NavLink>\r\n            <NavLink to=\"/episodes\" className=\"nav-link text-light\">\r\n              Episode\r\n            </NavLink>\r\n            <NavLink\r\n              activeClassName=\"active\"\r\n              className=\"nav-link text-light\"\r\n              to=\"/location\"\r\n            >\r\n              Location\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst InputGroup = ({ name, changeID, total }) => {\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <select\r\n        onChange={(e) => changeID(e.target.value)}\r\n        className=\"form-select\"\r\n        id={name}\r\n      >\r\n        <option value=\"1\">Choose...</option>\r\n        {[...Array(total).keys()].map((x, index) => {\r\n          return (\r\n            <option value={x + 1}>\r\n              {name} - {x + 1}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputGroup;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"../components/Card/Card\";\r\nimport InputGroup from \"../components/Filter/category/InputGroup\";\r\n\r\nconst Episodes = () => {\r\n  let [results, setResults] = React.useState([]);\r\n  let [info, setInfo] = useState([]);\r\n  let { air_date, episode, name } = info;\r\n  let [id, setID] = useState(1);\r\n\r\n  let api = `https://rickandmortyapi.com/api/episode/${id}`;\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      let data = await fetch(api).then((res) => res.json());\r\n      setInfo(data);\r\n\r\n      let a = await Promise.all(\r\n        data.characters.map((x) => {\r\n          return fetch(x).then((res) => res.json());\r\n        })\r\n      );\r\n      setResults(a);\r\n    })();\r\n  }, [api]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mb-3\">\r\n        <h1 className=\"text-center mb-3\">\r\n          Episode name :{\" \"}\r\n          <span className=\"text-danger\">{name === \"\" ? \"Unknown\" : name}</span>\r\n        </h1>\r\n        <h5 className=\"text-center\">\r\n          Air Date: {air_date === \"\" ? \"Unknown\" : air_date}\r\n        </h5>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 col-12 mb-4\">\r\n          <h4 className=\"text-center mb-4\">Pick Episode</h4>\r\n          <InputGroup name=\"Episode\" changeID={setID} total={51} />\r\n        </div>\r\n        <div className=\"col-lg-8 col-12\">\r\n          <div className=\"row\">\r\n            <Card page=\"/episodes/\" results={results} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Episodes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"../components/Card/Card\";\r\nimport InputGroup from \"../components/Filter/category/InputGroup\";\r\n\r\nconst Location = () => {\r\n  let [results, setResults] = React.useState([]);\r\n  let [info, setInfo] = useState([]);\r\n  let { dimension, type, name } = info;\r\n  let [number, setNumber] = useState(1);\r\n\r\n  let api = `https://rickandmortyapi.com/api/location/${number}`;\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      let data = await fetch(api).then((res) => res.json());\r\n      setInfo(data);\r\n\r\n      let a = await Promise.all(\r\n        data.residents.map((x) => {\r\n          return fetch(x).then((res) => res.json());\r\n        })\r\n      );\r\n      setResults(a);\r\n    })();\r\n  }, [api]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mb-3\">\r\n        <h1 className=\"text-center mb-3\">\r\n          Location :\r\n          <span className=\"text-danger\">\r\n            {\" \"}\r\n            {name === \"\" ? \"Unknown\" : name}\r\n          </span>\r\n        </h1>\r\n        <h5 className=\"text-center\">\r\n          Dimension: {dimension === \"\" ? \"Unknown\" : dimension}\r\n        </h5>\r\n        <h6 className=\"text-center\">Type: {type === \"\" ? \"Unknown\" : type}</h6>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 col-12 mb-4\">\r\n          <h4 className=\"text-center mb-4\">Pick Location</h4>\r\n          <InputGroup name=\"Location\" changeID={setNumber} total={126} />\r\n        </div>\r\n        <div className=\"col-lg-8 col-12\">\r\n          <div className=\"row\">\r\n            <Card page=\"/location/\" results={results} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport Search from \"./components/Search/Search\";\r\nimport Card from \"./components/Card/Card\";\r\nimport Pagination from \"./components/Pagination/Pagination\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\n\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Episodes from \"./Pages/Episodes\";\r\nimport Location from \"./Pages/Location\";\r\nimport CardDetails from \"./components/Card/CardDetails\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n      </div>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/:id\" element={<CardDetails />} />\r\n\r\n        <Route path=\"/episodes\" element={<Episodes />} />\r\n        <Route path=\"/episodes/:id\" element={<CardDetails />} />\r\n\r\n        <Route path=\"/location\" element={<Location />} />\r\n        <Route path=\"/location/:id\" element={<CardDetails />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst Home = () => {\r\n  let [pageNumber, updatePageNumber] = useState(1);\r\n  let [status, updateStatus] = useState(\"\");\r\n  let [gender, updateGender] = useState(\"\");\r\n  let [species, updateSpecies] = useState(\"\");\r\n  let [fetchedData, updateFetchedData] = useState([]);\r\n  let [search, setSearch] = useState(\"\");\r\n  let { info, results } = fetchedData;\r\n\r\n  let api = `https://rickandmortyapi.com/api/character/?page=${pageNumber}&name=${search}&status=${status}&gender=${gender}&species=${species}`;\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      let data = await fetch(api).then((res) => res.json());\r\n      updateFetchedData(data);\r\n    })();\r\n  }, [api]);\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"text-center mb-3\">Characters</h1>\r\n      <Search setSearch={setSearch} updatePageNumber={updatePageNumber} />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Filter\r\n            pageNumber={pageNumber}\r\n            status={status}\r\n            updateStatus={updateStatus}\r\n            updateGender={updateGender}\r\n            updateSpecies={updateSpecies}\r\n            updatePageNumber={updatePageNumber}\r\n          />\r\n          <div className=\"col-lg-8 col-12\">\r\n            <div className=\"row\">\r\n              <Card page=\"/\" results={results} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Pagination\r\n        info={info}\r\n        pageNumber={pageNumber}\r\n        updatePageNumber={updatePageNumber}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3gsHN\",\"content\":\"Card_content__3H2Eh\",\"img\":\"Card_img__1KPhz\",\"badge\":\"Card_badge__2vuz_\"};"],"sourceRoot":""}